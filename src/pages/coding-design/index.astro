---
import PictureCard from "../../components/general/picture-card.astro";
import { getCodingDesign } from "../../helpers/get-coding-design";
import BaseLayout from "../../layouts/base-layout.astro";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

const data = getCodingDesign();

const blogArticles = await getCollection("blog");

const articleData = blogArticles
	.map((x) => ({
		title: x.data.title,
		project_id: x.data.project_id,
		slug: x.slug,
	}))
	.filter((x) => x.project_id);
---

<BaseLayout title="Viraj's Website">
	<div class='content'>
		<h1>Coding & Design</h1>
		<div class='cards-container'>
			{
				data.map((d) => (
					<PictureCard
						imageUrl={d.img.url}
						imageAlt={d.title}
						height={500}
						newTab>
						<div class='card-content'>
							<div>
								<h3 class='film-name'>{d.title}</h3>
								<div>
									<p>{d.very_short_desc}</p>
									<div class='links'>
										{d.github_link ? (
											<a
												href={d.github_link}
												target='_blank'
												title='Link to GitHub'
												class='link-a'
												rel='noopener noreferrer'>
												<Icon name='uil:github' size={35} />
											</a>
										) : null}
										{articleData.find((x) => x.project_id === d.id) && (
											<a
												href={`/blog/${
													articleData.find((x) => x.project_id === d.id)?.slug
												}`}
												title={`Blog Article - ${
													articleData.find((x) => x.project_id === d.id)?.title
												}`}
												class='link-a'>
												<Icon name='ic:baseline-article' size={35} />
											</a>
										)}
										<a
											href={d.project_link}
											target='_blank'
											title='Link to Project'
											class='link-a'
											rel='noopener noreferrer'>
											<Icon name='heroicons-solid:external-link' size={35} />
										</a>
									</div>
								</div>
							</div>
							<div>
								<div class='tags'>
									{d.tools_used.map((x) => (
										<div class='tag'>{x}</div>
									))}
								</div>
							</div>
						</div>
					</PictureCard>
				))
			}
		</div>
	</div>
</BaseLayout>

<style lang='scss'>
	.content {
		padding-top: 100px;
		max-width: 1200px;
		margin: 0 auto;

		> h1 {
			padding-inline: 2rem;

			@media screen and (min-width: 960px) {
				padding-inline: 0;
			}
		}
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5em;

		.tag {
			background-color: rgb(255 255 255 / 0.2);
			border: 1px solid rgb(255 255 255 / 0.2);
			font-size: 0.87rem;
			border-radius: 0.25em;
			padding: 0.4em 1em;
		}
	}

	.card-content {
		display: flex;
		flex-direction: column;
		height: 100%;
		justify-content: space-between;
	}

	.cards-container {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
		gap: 2em;
		width: 100%;
		padding-inline: 2rem;
		margin-block-end: 130px;

		@media screen and (min-width: 1200px) {
			padding-inline: 0;
		}
	}

	.links {
		display: flex;
		gap: 0.25em;
	}

	.link-a {
		position: relative;
		svg {
			opacity: 0.75;
			transition: opacity 150ms ease;
		}

		&:hover svg {
			opacity: 1;
		}

		&::after {
			content: attr(title);
			background-color: #161616;
			color: #fff;
			position: absolute;
			left: 0;
			bottom: calc(100% + 0.3em);
			pointer-events: none;
			opacity: 0;
			width: max-content;
			max-width: 12rem;
			padding: 0.25em 0.5em;
			border-radius: 0.5em;
			box-shadow: 1px 2px 2px #fff;
			border: 1px solid #313131;
			transition: opacity 150ms ease;
		}

		&:hover::after,
		&:focus-visible::after {
			opacity: 1;
		}
	}
</style>
