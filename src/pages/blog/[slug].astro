---
import {
	type CollectionEntry,
	getCollection,
	getEntryBySlug,
} from "astro:content";
import BaseLayout from "../../layouts/base-layout.astro";
import MdImage from "../../components/markdown-components/md-image.astro";
import AnchorElement from "../../components/markdown-components/anchor-element.astro";
import H2 from "../../components/markdown-components/h2.astro";

interface Props {
	entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
	const blogEntries = await getCollection("blog");
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry: ent } = Astro.props;
const { slug } = Astro.params;

const { Content } = await ent.render();
const entry = await getEntryBySlug("blog", slug as any);
---

<BaseLayout title={entry?.data.title ?? ""}>
	<div class='content'>
		<div class='inner-content'>
			<h1>{entry?.data.title}</h1>
			<Content components={{ img: MdImage, a: AnchorElement, h2: H2 }} />
		</div>
	</div>
</BaseLayout>

<style lang='scss'>
	.content {
		padding-top: 100px;
		padding-inline: 2rem;
		margin: 0 auto;
		padding-bottom: 80px;

		@media screen and (min-width: 800px) {
			padding-inline: 0;
		}
	}

	p {
		text-wrap: balance;
	}

	h1 {
		text-align: center;
		font-size: clamp(2.25rem, 4vw, 3rem);
		text-wrap: balance;

		@media screen and (min-width: 800px) {
			margin-block-start: 0;
		}
	}

	.inner-content {
		max-width: 80ch;
		margin: 0 auto;

		@media screen and (min-width: 800px) {
			div {
				font-size: 0.875rem;

				h1 {
					font-size: 1.9rem;
				}
			}
		}
	}
</style>
