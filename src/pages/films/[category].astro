---
import Dropdown from "../../components/general/dropdown.astro";
import PictureCard from "../../components/general/picture-card.astro";
import {
	getCurrentCategories,
	getVideoSummary,
} from "../../helpers/get-videos-summary";
import BaseLayout from "../../layouts/base-layout.astro";
import { FilmCategories } from "../../types/film-categories";
import type { MenuItem } from "../../types/menu-item";

export const getStaticPaths = () => {
	const categories = Object.keys(FilmCategories);
	return categories.map((x) => ({
		params: { category: x },
	}));
};

const { category: cat } = Astro.params;

const videosSummary = await getVideoSummary(cat);

const currentCategories = await getCurrentCategories();

const categoriesDropDownItems: MenuItem[] = currentCategories.map((x) => ({
	label: FilmCategories[x as never],
	link: `/films/${x}`,
}));
---

<BaseLayout title={`Filmmaking - ${FilmCategories[cat as never]}`}>
	<div class='content'>
		<div class='title-container'>
			<h1>Filmmaking</h1>
			<Dropdown dropdownItems={categoriesDropDownItems}>
				{FilmCategories[cat as never]}
			</Dropdown>
		</div>

		<div class='card-container'>
			{
				videosSummary.map((video) => (
					<PictureCard
						imageUrl={video.thumbnail satisfies string}
						imageAlt={`thumbnail - ${video.thumbnail}`}
						link={`/films/details/${video.videoId}`}
						height={500}
						aspectRatio={"4:3"}>
						<h3 class='film-name'>{video.title}</h3>
						<div class='film-meta'>
							{FilmCategories[video.category as never]} ãƒ» {video.year}
						</div>
						<p class='film-desc'>{video.short_description}</p>
					</PictureCard>
				))
			}
		</div>
	</div>
</BaseLayout>

<style lang='scss'>
	.content {
		padding-block-start: 80px;
		padding-block-end: 150px;
		// padding-inline: 1.7em;
		max-width: 1600px;
		margin: 0 auto;
	}

	h1 {
		font-size: clamp(2.7rem, 12vw, 2rem);
	}

	.card-container {
		display: grid;
		gap: 2em;
		width: 100%;
		max-width: 1400px;
		padding-inline: 1rem;
		margin-inline: auto;

		@media screen and (min-width: 768px) {
			padding-inline: 2rem;
			grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
		}
	}

	.film-name {
		text-transform: uppercase;
		font-size: 1.3rem;
		margin: 0;
	}

	.film-meta {
		font-size: 1rem;
		color: #6d6d6d;
		margin-block-start: 0.3em;
	}

	.title-container {
		max-width: 1400px;
		padding-inline: 1rem;
		margin-inline: auto;
		margin-block-end: 2rem;

		@media screen and (min-width: 768px) {
			padding-inline: 2rem;
		}

		h1 {
			margin: 0;
			margin-block-end: 1rem;
			padding: 0;
		}

		@media screen and (min-width: 600px) {
			display: flex;
			align-items: center;
			justify-content: space-between;
			margin-block-end: 0;
			padding-block: 1.5em;
		}
	}
</style>
